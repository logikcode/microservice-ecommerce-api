spring.application.name=order-service
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/order-service
spring.datasource.username=root
spring.datasource.password=12345

eureka.client.serviceUrl.defaultZone=http://eureka:password@localhost:8761/eureka
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/microservices-ecommerce-realm

spring.jpa.hibernate.ddl-auto=create
server.port=8082

# Enabling circuit breaker on the service
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.exclude=*
management.endpoint.health.show-details=always

# Resilience4j Properties
resilience4j.circuitbreaker.instances.CircuitBreakerService.register-health-indicator=true
resilience4j.circuitbreaker.instances.CircuitBreakerService.event-consumer-buffer-size=10

# Number of fails before the state changes from close to open

resilience4j.circuitbreaker.instances.CircuitBreakerService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.CircuitBreakerService.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.CircuitBreakerService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.CircuitBreakerService.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.CircuitBreakerService.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-size=10
resilience4j.circuitbreaker.instances.CircuitBreakerService.sliding-window-type=count_based

#Resilience4j TimeLimiterApi Properties

resilience4j.timelimiter.instances.timeLimiterApi.timeout-duration.=3s

# Resilience4j Retry Properties
resilience4j.retry.instances.retryApi.wait-duration=2s
resilience4j.retry.instances.retryApi.max-attempts=3

#Sleuth and zipkin properties
spring.zipkin.base-url=http://localhost:9411
spring.sleuth.sampler.probability=1.0

#Kafka properties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.producer.properties.spring.json.type.mapping=event:com.logikcode.orderservice.event.OrderPlaceEvent